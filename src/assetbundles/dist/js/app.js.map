{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assetbundles/src/vue/Filters.vue","webpack:///./src/assetbundles/src/vue/Filters.vue?dc2b","webpack:///src/assetbundles/src/vue/Filters.vue","webpack:///./src/assetbundles/src/vue/Filters.vue?88ff","webpack:///./src/assetbundles/src/vue/Dashboard.vue","webpack:///src/assetbundles/src/vue/Dashboard.vue","webpack:///./src/assetbundles/src/vue/Dashboard.vue?f512","webpack:///./src/assetbundles/src/vue/Dashboard.vue?e28f","webpack:///./src/assetbundles/src/vue/Actions.vue","webpack:///src/assetbundles/src/vue/Actions.vue","webpack:///./src/assetbundles/src/vue/Actions.vue?6fcb","webpack:///./src/assetbundles/src/vue/Actions.vue?e80f","webpack:///./src/assetbundles/src/js/app.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","staticClass","_v","staticStyle","padding","_l","locales","locale","directives","rawName","selectedLocales","expression","attrs","id","type","domProps","checked","Array","isArray","_i","on","change","$event","$$a","$$el","target","$$c","$$v","$$i","concat","for","_s","columnOptions","column","selectedColumns","label","category","$$selectedVal","filter","options","selected","map","_value","multiple","categories","item","missing","search","placeholder","autocomplete","input","composing","click","reset","_withStripped","methods","save","handleSearch","mounted","created","watch","localStorage","class","busy","isBusy","width","role","tabindex","toggleSelectAllRows","checkedState","columns","ordered","handle","asc","direction","desc","style","orderBy","resize","overflow","innerHTML","title","sourceMessages","sourceMessage","selectedRows","message","messages","rows","$set","includes","dateCreated","_e","dateUpdated","getColumns","firstColumns","lastColumns","disabled","actionExport","actionDelete","Vue","el","components","Dashboard","Filters","Actions","updateData","self","axios","post","then","response","Craft","cp","displayNotice","catch","error","displayError","console","log","finally","getData","filters","$root","$emit","ids","url","URL","createObjectURL","Blob","file","link","document","createElement","href","setAttribute","fileName","body","appendChild","$on","order","forEach"],"mappings":"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","file":"js/app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([7,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"flex flex-nowrap flex-grow\" }, [\n    _c(\"div\", { staticClass: \"btn menubtn statusmenubtn\" }, [\n      _vm._v(\"Columns\"),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"menu\" }, [\n      _c(\n        \"ul\",\n        { staticStyle: { padding: \"2px\" } },\n        [\n          _vm._l(_vm.locales, function (locale) {\n            return _c(\"li\", { staticStyle: { padding: \"3px 0px\" } }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.selectedLocales,\n                    expression: \"selectedLocales\",\n                  },\n                ],\n                staticClass: \"checkbox\",\n                attrs: { id: `selected-locale-${locale}`, type: \"checkbox\" },\n                domProps: {\n                  value: locale,\n                  checked: Array.isArray(_vm.selectedLocales)\n                    ? _vm._i(_vm.selectedLocales, locale) > -1\n                    : _vm.selectedLocales,\n                },\n                on: {\n                  change: function ($event) {\n                    var $$a = _vm.selectedLocales,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = locale,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.selectedLocales = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.selectedLocales = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.selectedLocales = $$c\n                    }\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: `selected-locale-${locale}` } }, [\n                _vm._v(\"Language: \" + _vm._s(locale)),\n              ]),\n            ])\n          }),\n          _vm._v(\" \"),\n          _vm._l(_vm.columnOptions, function (column) {\n            return _c(\n              \"li\",\n              { key: column.value, staticStyle: { padding: \"5px 2px\" } },\n              [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.selectedColumns,\n                      expression: \"selectedColumns\",\n                    },\n                  ],\n                  staticClass: \"checkbox\",\n                  attrs: {\n                    id: `selected-locale-${column.value}`,\n                    type: \"checkbox\",\n                  },\n                  domProps: {\n                    value: column.value,\n                    checked: Array.isArray(_vm.selectedColumns)\n                      ? _vm._i(_vm.selectedColumns, column.value) > -1\n                      : _vm.selectedColumns,\n                  },\n                  on: {\n                    change: function ($event) {\n                      var $$a = _vm.selectedColumns,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = column.value,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 && (_vm.selectedColumns = $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            (_vm.selectedColumns = $$a\n                              .slice(0, $$i)\n                              .concat($$a.slice($$i + 1)))\n                        }\n                      } else {\n                        _vm.selectedColumns = $$c\n                      }\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"label\",\n                  { attrs: { for: `selected-locale-${column.value}` } },\n                  [_vm._v(_vm._s(column.label))]\n                ),\n              ]\n            )\n          }),\n        ],\n        2\n      ),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"select\" }, [\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.category,\n              expression: \"category\",\n            },\n          ],\n          attrs: { id: \"filter-category\" },\n          on: {\n            change: function ($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function (o) {\n                  return o.selected\n                })\n                .map(function (o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.category = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            },\n          },\n        },\n        [\n          _c(\"option\", { attrs: { value: \"\" } }, [_vm._v(\"Category\")]),\n          _vm._v(\" \"),\n          _vm._l(_vm.categories, function (item) {\n            return _c(\"option\", { domProps: { value: item } }, [\n              _vm._v(_vm._s(item)),\n            ])\n          }),\n        ],\n        2\n      ),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"select\" }, [\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.missing,\n              expression: \"missing\",\n            },\n          ],\n          attrs: { id: \"filter-category\" },\n          on: {\n            change: function ($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function (o) {\n                  return o.selected\n                })\n                .map(function (o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.missing = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            },\n          },\n        },\n        [\n          _c(\"option\", { attrs: { value: \"\" } }, [_vm._v(\"Filter missing\")]),\n          _vm._v(\" \"),\n          _vm._l(_vm.locales, function (item) {\n            return _c(\"option\", { domProps: { value: item } }, [\n              _vm._v(_vm._s(item)),\n            ])\n          }),\n        ],\n        2\n      ),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"flex-grow texticon search icon clearable\" }, [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.search,\n            expression: \"search\",\n          },\n        ],\n        staticClass: \"text fullwidth\",\n        attrs: { type: \"text\", placeholder: \"search...\", autocomplete: \"off\" },\n        domProps: { value: _vm.search },\n        on: {\n          input: function ($event) {\n            if ($event.target.composing) return\n            _vm.search = $event.target.value\n          },\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    _c(\"button\", { staticClass: \"btn submit\", on: { click: _vm.reset } }, [\n      _vm._v(\"Reset\"),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filters.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filters.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"flex flex-nowrap flex-grow\">\n        <div class=\"btn menubtn statusmenubtn\">Columns</div>\n        <div class=\"menu\">\n            <ul style=\"padding: 2px\">\n                <li v-for=\"locale in locales\" style=\"padding: 3px 0px\">\n                    <input :id=\"`selected-locale-${locale}`\"\n                           class=\"checkbox\"\n                           type=\"checkbox\"\n                           v-model=\"selectedLocales\"\n                           :value=\"locale\"\n                    >\n                    <label :for=\"`selected-locale-${locale}`\">Language: {{ locale }}</label>\n                </li>\n                <li v-for=\"column in columnOptions\" :key=\"column.value\" style=\"padding: 5px 2px\">\n                    <input :id=\"`selected-locale-${column.value}`\"\n                           class=\"checkbox\"\n                           type=\"checkbox\"\n                           v-model=\"selectedColumns\"\n                           :value=\"column.value\"\n                    >\n                    <label :for=\"`selected-locale-${column.value}`\">{{ column.label }}</label>\n                </li>\n            </ul>\n        </div>\n        <div class=\"select\">\n            <select id=\"filter-category\" v-model=\"category\">\n                <option value=\"\">Category</option>\n                <option v-for=\"item in categories\" :value=\"item\">{{ item }}</option>\n            </select>\n        </div>\n        <div class=\"select\">\n            <select id=\"filter-category\" v-model=\"missing\">\n                <option value=\"\">Filter missing</option>\n                <option v-for=\"item in locales\" :value=\"item\">{{ item }}</option>\n            </select>\n        </div>\n        <div class=\"flex-grow texticon search icon clearable\">\n            <input type=\"text\" class=\"text fullwidth\" placeholder=\"search...\" v-model=\"search\" autocomplete=\"off\">\n        </div>\n        <button @click=\"reset\" class=\"btn submit\">Reset</button>\n    </div>\n</template>\n\n<script>\n    // Our component exports\n    import {debounce} from \"debounce\";\n\n    export default {\n        methods: {\n            reset() {\n                this.category = '';\n                this.search = '';\n                this.missing = '';\n            },\n            save() {\n                // Fire the emit 'emit-update'..\n                this.$root.$emit('emit-update');\n            },\n            handleSearch(value) {\n              // Fire the emit 'emit-search' with the value.\n              this.$root.$emit('emit-search', value);\n            }\n        },\n        mounted: function() {\n            this.$root.$on('emit-categories', (categories) => {\n                // Set the categories.\n                this.categories = categories;\n            });\n\n            this.$root.$on('emit-locales', (locales) => {\n                // Set the categories.\n                this.locales = locales;\n                if (this.selectedLocales.length === 0) {\n                    this.selectedLocales = locales\n                }\n            });\n\n            if (localStorage.getItem('selectedLocales')) {\n                this.selectedLocales = JSON.parse(localStorage.getItem('selectedLocales'));\n            }\n            if (localStorage.getItem('selectedColumns')) {\n                this.selectedColumns = JSON.parse(localStorage.getItem('selectedColumns'));\n            }\n        },\n        created: function() {\n          this.handleSearch = debounce(this.handleSearch, 400);\n        },\n        watch: {\n            search: function(value) {\n              this.handleSearch(value);\n            },\n            category: function(value) {\n                // Fire the emit 'emit-filter category' with the value.\n                this.$root.$emit('emit-filter-category', value);\n            },\n            missing: function(value) {\n                // Fire the emit 'emit-filter category' with the value.\n                this.$root.$emit('emit-filter-missing', value);\n            },\n            selectedLocales: function(value) {\n                // Fire the emit 'emit-selected-locales' with the value.\n                localStorage.setItem('selectedLocales', JSON.stringify(value));\n                this.$root.$emit('emit-selected-locales', value);\n            },\n            selectedColumns: function(value) {\n                // Fire the emit 'emit-selected-columns' with the value.\n                localStorage.setItem('selectedColumns', JSON.stringify(value));\n                this.$root.$emit('emit-selected-columns', value);\n            }\n        },\n        data: function() {\n            return {\n                categories: [],\n                locales: [],\n                selectedLocales: [],\n                selectedColumns: [\n                    'dateUpdated'\n                ],\n                columnOptions: [\n                    {'label': 'Date Created','value': 'dateCreated'},\n                    {'label': 'Date Updated','value': 'dateUpdated'}\n                ],\n                category: '',\n                missing: '',\n                search: ''\n            }\n        },\n    }\n</script>\n","import { render, staticRenderFns } from \"./Filters.vue?vue&type=template&id=61888e5d&\"\nimport script from \"./Filters.vue?vue&type=script&lang=js&\"\nexport * from \"./Filters.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"elements\", class: { busy: _vm.isBusy } }, [\n    _c(\"div\", { staticClass: \"tableview tablepane\" }, [\n      _c(\"table\", { staticClass: \"data fullwidth\" }, [\n        _c(\"thead\", [\n          _c(\n            \"tr\",\n            [\n              _c(\n                \"th\",\n                {\n                  staticClass: \"checkbox-cell selectallcontainer\",\n                  staticStyle: { width: \"50px\" },\n                  attrs: { role: \"checkbox\", tabindex: \"0\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.toggleSelectAllRows()\n                    },\n                  },\n                },\n                [\n                  _c(\"div\", {\n                    staticClass: \"checkbox\",\n                    class: _vm.checkedState(),\n                  }),\n                ]\n              ),\n              _vm._v(\" \"),\n              _vm._l(_vm.columns, function (item) {\n                return _c(\n                  \"th\",\n                  {\n                    class: {\n                      ordered: item.handle === _vm.column,\n                      asc:\n                        item.handle === _vm.column && _vm.direction === \"asc\",\n                      desc:\n                        item.handle === _vm.column && _vm.direction === \"desc\",\n                    },\n                    style: { width: item.width },\n                    on: {\n                      click: function ($event) {\n                        return _vm.orderBy(item.handle)\n                      },\n                    },\n                  },\n                  [\n                    item.handle === \"message\"\n                      ? _c(\"div\", {\n                          staticStyle: {\n                            resize: \"horizontal\",\n                            \"min-width\": \"100px\",\n                            overflow: \"auto\",\n                          },\n                          domProps: { innerHTML: _vm._s(item.title) },\n                        })\n                      : _c(\"div\", {\n                          domProps: { innerHTML: _vm._s(item.title) },\n                        }),\n                  ]\n                )\n              }),\n            ],\n            2\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"tbody\",\n          _vm._l(_vm.sourceMessages, function (sourceMessage) {\n            return _c(\n              \"tr\",\n              [\n                _c(\"td\", { staticClass: \"checkbox-cell\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.selectedRows,\n                        expression: \"selectedRows\",\n                      },\n                    ],\n                    staticClass: \"checkbox\",\n                    attrs: {\n                      id: \"source-message-\" + sourceMessage.id,\n                      type: \"checkbox\",\n                      title: \"Select\",\n                    },\n                    domProps: {\n                      value: sourceMessage.id,\n                      checked: Array.isArray(_vm.selectedRows)\n                        ? _vm._i(_vm.selectedRows, sourceMessage.id) > -1\n                        : _vm.selectedRows,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.selectedRows,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = sourceMessage.id,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.selectedRows = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.selectedRows = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.selectedRows = $$c\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", {\n                    attrs: { for: \"source-message-\" + sourceMessage.id },\n                  }),\n                ]),\n                _vm._v(\" \"),\n                _c(\"td\", {\n                  domProps: { innerHTML: _vm._s(sourceMessage.category) },\n                }),\n                _vm._v(\" \"),\n                _c(\"td\", {\n                  staticStyle: { \"max-width\": \"200px\" },\n                  domProps: { innerHTML: _vm._s(sourceMessage.message) },\n                }),\n                _vm._v(\" \"),\n                _vm._l(_vm.selectedLocales, function (locale) {\n                  return _c(\"td\", [\n                    _c(\"textarea\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: sourceMessage.messages[locale],\n                          expression: \"sourceMessage.messages[locale]\",\n                        },\n                      ],\n                      staticClass: \"text fullwidth\",\n                      staticStyle: { resize: \"vertical\" },\n                      attrs: { rows: \"1\" },\n                      domProps: { value: sourceMessage.messages[locale] },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            sourceMessage.messages,\n                            locale,\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                  ])\n                }),\n                _vm._v(\" \"),\n                _vm.selectedColumns.includes(\"dateCreated\")\n                  ? _c(\"td\", {\n                      domProps: {\n                        innerHTML: _vm._s(sourceMessage.dateCreated),\n                      },\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.selectedColumns.includes(\"dateUpdated\")\n                  ? _c(\"td\", {\n                      domProps: {\n                        innerHTML: _vm._s(sourceMessage.dateUpdated),\n                      },\n                    })\n                  : _vm._e(),\n              ],\n              2\n            )\n          }),\n          0\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"elements\"  :class=\"{'busy': isBusy}\">\n        <div class=\"tableview tablepane\">\n            <table class=\"data fullwidth\">\n                <thead>\n                <tr>\n                    <th class=\"checkbox-cell selectallcontainer\" role=\"checkbox\" tabindex=\"0\" style=\"width: 50px\" @click=\"toggleSelectAllRows()\">\n                        <div class=\"checkbox\" :class=\"checkedState()\"></div>\n                    </th>\n                    <th\n                        v-for=\"item in columns\"\n                        @click=\"orderBy(item.handle)\"\n                        :class=\"{ 'ordered': item.handle === column, 'asc': item.handle === column && direction === 'asc', 'desc': item.handle === column && direction === 'desc' }\"\n                        :style=\"{ 'width': item.width }\"\n                    >\n                        <div v-if=\"item.handle === 'message'\" v-html=\"item.title\" style=\"resize: horizontal; min-width: 100px; overflow: auto;\"></div>\n                        <div v-else v-html=\"item.title\"></div>\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"sourceMessage in sourceMessages\">\n                    <td class=\"checkbox-cell\">\n                        <input :id=\"'source-message-' + sourceMessage.id\" type=\"checkbox\" class=\"checkbox\"\n                               title=\"Select\"\n                               :value=\"sourceMessage.id\"\n                               v-model=\"selectedRows\">\n                        <label :for=\"'source-message-' + sourceMessage.id\"></label>\n                    </td>\n                    <td v-html=\"sourceMessage.category\"></td>\n                    <td v-html=\"sourceMessage.message\" style=\"max-width: 200px;\"></td>\n                    <td v-for=\"locale in selectedLocales\">\n                        <textarea class=\"text fullwidth\" v-model=\"sourceMessage.messages[locale]\" rows=\"1\" style=\"resize: vertical\"></textarea>\n                    </td>\n                    <td v-html=\"sourceMessage.dateCreated\" v-if=\"selectedColumns.includes('dateCreated')\"></td>\n                    <td v-html=\"sourceMessage.dateUpdated\" v-if=\"selectedColumns.includes('dateUpdated')\"></td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    // Our component exports\n    export default {\n        methods: {\n            orderBy(column) {\n\n                // Set the direction.\n                this.direction = this.column == column ? this.direction == 'asc' ? 'desc' : 'asc' : 'asc';\n                \n                // Set the column\n                this.column = column;\n\n                // Fire the emit 'emit-order-by' with the column and the direction.\n                this.$root.$emit('emit-order-by', this.column, this.direction);\n            },\n            toggleSelectAllRows() {\n                if (this.selectedRows.length > 0) {\n                    this.selectedRows = [];\n                } else {\n                    for (const sourceMessage of this.sourceMessages) {\n                        this.selectedRows.push(sourceMessage.id);\n                    }\n                }\n            },\n            checkedState() {\n                if (this.selectedRows.length > 0) {\n                    if (this.selectedRows.length === this.sourceMessages.length) {\n                        return 'checked';\n                    } else {\n                        return 'indeterminate';\n                    }\n                }\n                return '';\n            },\n            getColumns() {\n\n                // Set the first two columns.\n                let firstColumns = [\n                    {\n                        title: 'Category',\n                        handle: 'category',\n                        width: '80px'\n                    },\n                    {\n                        title: 'Message',\n                        handle: 'message',\n                        width: '250px'\n                    }\n                ];\n\n                // Set the last two columns.\n                let lastColumns = [\n                    {\n                        title: 'Created',\n                        handle: 'dateCreated',\n                        width: '200px'\n                    },\n                    {\n                        title: 'Updated',\n                        handle: 'dateUpdated',\n                        width: '200px'\n                    }\n                ];\n\n                // Create an empty columns array.\n                let columns = [];\n\n                // Add the first two columns to the columns array.\n                firstColumns.forEach((column) => {\n                    columns.push(column)\n                })\n\n                // Add foreach locale a column to the columns array.\n                this.selectedLocales.forEach((column) => {\n                    columns.push({\n                        title: column,\n                        handle: column\n                    })\n                })\n\n                // Add the last two columns to the columns array.\n                lastColumns.forEach((column) => {\n                    if (this.selectedColumns.includes(column.handle)) {\n                        columns.push(column)\n                    }\n                })\n\n                // Set the columns.\n                this.columns = columns;\n            }\n        },\n        mounted: function () {\n            if (localStorage.getItem('selectedLocales')) {\n                this.selectedLocales = JSON.parse(localStorage.getItem('selectedLocales'));\n            }\n            if (localStorage.getItem('selectedColumns')) {\n                this.selectedColumns = JSON.parse(localStorage.getItem('selectedColumns'));\n            }\n        },\n        created: function() {\n\n            // Listen to the emit 'emit-source-messages'.\n            this.$root.$on('emit-source-messages', (sourceMessages) => {\n\n                // Set the source messages.\n                this.sourceMessages = sourceMessages;\n            })\n\n            // Listen to the emit 'emit-busy'.\n            this.$root.$on('emit-busy', (isBusy) => {\n                this.isBusy = isBusy;\n            })\n\n            // Listen to the emit 'emit-locales'.\n            this.$root.$on('emit-locales', (locales) => {\n\n                // Set the locales.\n                this.locales = locales;\n\n                // Get the columns.\n                this.getColumns()\n            })\n\n            // Listen to the emit 'emit-selected-locales'.\n            this.$root.$on('emit-selected-locales', (selectedLocales) => {\n\n                // Set the search\n                this.selectedLocales = selectedLocales;\n\n                // Get the columns.\n                this.getColumns()\n            });\n\n            // Listen to the emit 'emit-selected-locales'.\n            this.$root.$on('emit-selected-columns', (selectedColumns) => {\n\n                // Set the search\n                this.selectedColumns = selectedColumns;\n\n                // Get the columns.\n                this.getColumns()\n            });\n\n            // Listen to the emit 'emit-categories'.\n            this.$root.$on('emit-categories', (categories) => {\n\n                // Set the categories.\n                this.categories = categories;\n            })\n        },\n        watch: {\n            selectedRows: function (value) {\n                this.$root.$emit('emit-selection-changed', value);\n            }\n        },\n        data: function() {\n            return {\n                locales: [],\n                selectedLocales: [],\n                selectedColumns: [\n                    'dateUpdated'\n                ],\n                columns: [],\n                selectedRows: [],\n                sourceMessages: [],\n                isBusy: true,\n                direction: 'asc',\n                column: 'category'\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=3bcab61d&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"flex flex-grow\" }, [\n    _c(\"div\", {\n      staticClass: \"light flex-grow\",\n      attrs: { id: \"count-container\" },\n    }),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"flex\" }, [\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          class: { disabled: _vm.selectedRows.length === 0 },\n          attrs: { disabled: _vm.selectedRows.length === 0 },\n          on: { click: _vm.actionExport },\n        },\n        [_vm._v(\"Export\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          class: { disabled: _vm.selectedRows.length === 0 },\n          attrs: { disabled: _vm.selectedRows.length === 0 },\n          on: { click: _vm.actionDelete },\n        },\n        [_vm._v(\"Delete\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"button\", { staticClass: \"btn submit\", on: { click: _vm.save } }, [\n        _vm._v(\"Save All\"),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"flex flex-grow\">\n        <div id=\"count-container\" class=\"light flex-grow\">\n        </div>\n        <div class=\"flex\">\n            <button @click=\"actionExport\" class=\"btn\" :class=\"{ disabled: selectedRows.length === 0}\" :disabled=\"selectedRows.length === 0\">Export</button>\n            <button @click=\"actionDelete\" class=\"btn\" :class=\"{ disabled: selectedRows.length === 0}\" :disabled=\"selectedRows.length === 0\">Delete</button>\n            <button @click=\"save\" class=\"btn submit\">Save All</button>\n        </div>\n    </div>\n</template>\n\n<script>\n    // Our component exports\n    export default {\n        methods: {\n            save() {\n                this.$root.$emit('emit-update');\n            },\n            actionExport() {\n                this.$root.$emit('emit-action-export', this.selectedRows);\n            },\n            actionDelete() {\n                if (confirm(\"Do you really want to delete \"+this.selectedRows.length+\" selected rows?\")){\n                    this.$root.$emit('emit-action-delete', this.selectedRows);\n                }\n            },\n        },\n        created: function() {\n            // Listen to the emit 'emit-selection-changed'.\n            this.$root.$on('emit-selection-changed', (selectedRows) => {\n                this.selectedRows = selectedRows;\n            })\n        },\n        data: function() {\n            return {\n                selectedRows: []\n            }\n        }\n    }\n</script>\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Actions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Actions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Actions.vue?vue&type=template&id=087cf7f2&\"\nimport script from \"./Actions.vue?vue&type=script&lang=js&\"\nexport * from \"./Actions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Filters from '../vue/Filters.vue';\nimport Dashboard from '../vue/Dashboard.vue';\nimport Actions from '../vue/Actions.vue';\n\n// Create our vue instance\nconst vm = new Vue({\n    el: \"#main\",\n    components: {\n        'dashboard': Dashboard,\n        'filters': Filters,\n        'actions': Actions\n    },\n    methods: {\n        updateData(messages) {\n            let self = this;\n            self.isBusy = true;\n\n            // Post the data.\n            axios.post('admin/database-translations/translations/update', {\n                messages: messages\n            })\n            .then(function (response) {\n                self.sourceMessages = response.data.sourceMessages;\n                window.Craft.cp.displayNotice('Save successful');\n            })\n            .catch(function (error) {\n                // Handle the error.\n                window.Craft.cp.displayError(error);\n                console.log(error);\n            })\n            .finally(function () {\n                self.isBusy = false;\n            });\n        },\n        getData() {\n\n            let self = this;\n            self.isBusy = true;\n\n            // Post the data with filters.\n            axios.post('database-translations/api/index', {\n                filters: this.filters\n            })\n\n            // Catch the response.\n            .then(function (response) {\n\n                // Set the source messages\n                self.sourceMessages = response.data.sourceMessages;\n\n                for (const i in self.sourceMessages) {\n                    if (self.sourceMessages[i].messages.length === 0) {\n                        // make it an object when empty\n                        self.sourceMessages[i].messages = {};\n                    }\n                    for (const j in response.data.locales) {\n                        const locale = response.data.locales[j];\n                        if (!self.sourceMessages[i].messages.hasOwnProperty(locale)) {\n                            // fill unknown translations with null\n                            self.sourceMessages[i].messages[locale] = null;\n                        }\n                    }\n                }\n\n                // Fire the emit 'emit-source-messages' with the source messages.\n                self.$root.$emit('emit-source-messages', self.sourceMessages);\n\n                // Fire the emit 'emit-locales' with the locales.\n                self.$root.$emit('emit-locales', response.data.locales);\n\n                // Fire the emit 'emit-categories' with the categories.\n                self.$root.$emit('emit-categories', response.data.categories);\n            })\n            // Catch the error.\n            .catch(function (error) {\n\n                // Handle the error.\n                console.log(error);\n            })\n            .finally(function () {\n                self.isBusy = false;\n            });\n        },\n        actionDelete(ids) {\n            this.isBusy = true;\n\n            axios.post('database-translations/translations/delete', {\n                messages: ids,\n                filters: this.filters\n            })\n            .then(function (response) {\n                window.Craft.cp.displayNotice('Row(s) deleted');\n            })\n            .catch(function (error) {\n                console.log(error);\n                window.Craft.cp.displayError(error);\n            });\n\n            this.getData();\n        },\n        actionExport(ids) {\n            axios.post('database-translations/translations/export', {\n                filters: {id: ids}\n            })\n            .then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data.file]))\n                const link = document.createElement('a')\n                link.href = url\n                link.setAttribute('download', response.data.fileName)\n                document.body.appendChild(link)\n                link.click()\n            })\n            .catch((error) => window.Craft.cp.displayError(error));\n        }\n    },\n    created: function() {\n\n        // Get the data.\n        this.getData();\n\n        // Listen to the emit 'emit-order-by'.\n        this.$root.$on('emit-order-by', (column, direction) => {\n\n            // set the column and direction\n            this.filters.order = column + ' ' + direction\n\n            // Get the data.\n            this.getData();\n        });\n\n        // Listen to the emit 'emit-filter-category'.\n        this.$root.$on('emit-filter-category', (category) => {\n\n            // Set the category.\n            this.filters.category = category;\n\n            // Get the data.\n            this.getData();\n        });\n\n        // Listen to the emit 'emit-search'.\n        this.$root.$on('emit-search', (search) => {\n\n            // Set the search\n            this.filters.search = search;\n\n            // Get the data.\n            this.getData();\n        });\n\n        // Listen to the emit 'emit-filter-missing'.\n        this.$root.$on('emit-filter-missing', (missing) => {\n\n            // Set the search\n            this.filters.missing = missing;\n\n            // Get the data.\n            this.getData();\n        });\n\n        // Listen to the emit 'emit-update'.\n        this.$root.$on('emit-update', () => {\n\n            // Create messages object.\n            let messages = {}\n\n            // Loop over the source messages.\n            this.sourceMessages.forEach((sourceMessage) => {\n\n                // Create a message variable.\n                let message = {};\n\n                // Loop over the messages in the source message and assign the translation to the message that matches the language.\n                for (const locale in sourceMessage.messages) {\n                    message[locale] = sourceMessage.messages[locale];\n                }\n\n                // Add the message to messages based on the id.\n                messages[sourceMessage.id] = message;\n            })\n\n            // Fire the update function.\n            this.updateData(messages);\n        });\n\n        // Listen to bulk actions\n        this.$root.$on('emit-action-export', this.actionExport);\n        this.$root.$on('emit-action-delete', this.actionDelete);\n\n    },\n    watch: {\n        isBusy: function (value) {\n            this.$root.$emit('emit-busy', value);\n        }\n    },\n    data: function() {\n        return {\n            sourceMessages: [],\n            isBusy: true,\n            filters: {\n                'order': 'category asc',\n            },\n        }\n    },\n});\n"],"sourceRoot":""}